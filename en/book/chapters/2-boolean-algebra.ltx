\ch{Booleans, simple logic, and simple operators}\label{booleans}

Before we get into interesting content, you have to understand some stuff. This
stuff is pretty easy. This will likely be the shortest and easiest chapter in
the book.

You might think math is about dealing with numbers and pumping out
formulas. Well, that's not what math is about. As said in \cref{intro-idris},
it's about using math as a language to express your thoughts. Most people don't
think about numbers all day; thus, we deal with things in math that aren't
numbers.

In this next section, we're going to outline some basic rules for reasoning
about things. You need to know these rules to do really cool stuff. Although, as
you will (hopefully) see, these rules can be fun to toy around with on their
own.

% \input{2/1-basic-logic.ltx}
% \input{2/2-more-logic.ltx}

\s{Implications}

The first thing you need to understand is the notion that ``if x is true, then y
is also true. But, if y is true, it's not necessarily true that x is false.'' As
always, mathematicians are too lazy to write this stuff out by hand, so they
have notation for it.

\begin{enumerate}
\item $a \implies b$ means that ``$a$ implies $b$''. It doesn't necessarily mean
  that $b$ implies $a$. It means that if $a$ is true, then $b$ is also true.

  If someone is decapitated, then they will die. So,

  \[ \text{Decapitated} \implies \text{Dead} \]

  However, if someone is dead, it doesn't necessarily mean that they were
  decapitated. They could have been shot, or stabbed, or had a heart
  attack. There are endless possibilities.

\item $a \impliedby b$ is the same as writing $b \implies a$. It's sometimes
  convenient to use $a \impliedby b$ instead. $a \impliedby b$ should be read
  ``$a$ is implied by $b$''.

\item When I strike through some mathematical operator, like this:
  $\notimplies$, it means that you can semantically but ``not'' in front of
  whatever the operator says. So, $\notimplies$ means ``not implies''. That
  doesn't make much grammatical sense in English, so ``does not imply'' might be
  better. Nonetheless, you get the point.

  Moving on from the example above:

  \[ \text{Decapitated} \implies \text{Dead} \]

  If someone is decapitated, then they're also dead (at least within a few
  seconds). However, if someone is dead, it's not necessarily true that they
  were decapitated.

  \[ \text{Decapitated} \notimpliedby \text{Dead} \]

\item If something is not true, then I'll put a $\lnot$ in front of it. So, if I
  want to say that $a$ is false, then I'll write $\lnot a$.

\item If I want to pose a question, I could just ask the question. For instance, ``Is
  $\lnot\text{Decapitated}\impliedby\lnot\text{Dead}$ true?''.

  However, that quickly becomes difficult, usually when there are multiple
  assertions in a mathematical expression, and you don't know which one I'm
  asking about. Moreover, since I use the same font for text and math, if I have
  both, it might be hard to tell which is math and which is text. So, to help
  with ambiguity, I'll put a ? over the operator I'm asking about:

  \[ \lnot \text{Decapitated} \Qimpliedby \lnot\text{Dead} \]

  See, that's much easier.

\item Now, on to that question - Is ``not decapitated'' implied by ``not
  dead''. Well, let's think about it. If someone is not dead, then they couldn't
  have been decapitated, because if they were decapitated, then they would be
  dead. Therefore, if someone is not dead, then they weren't decapitated.

  That word jumble was probably confusing. Mathematicians don't like to be
  confused. I'll make it symbolic for you.

  \begin{alignmath}{c}
  \text{Decapitated} \implies \text{Dead} \\
  \Downarrow \\
  \lnot \text{Decapitated} \impliedby \lnot\text{Dead} \\
  \end{alignmath}
  
  Okay, I just used a vertical arrow. I'm sure you can figure out what it means.

\item So, hopefully you agree that
  \begin{alignmath}{c}
  \text{Decapitated} \implies \text{Dead} \\
  \Downarrow \\
  \lnot \text{Decapitated} \impliedby \lnot\text{Dead} \\
  \end{alignmath}

  However,

  \begin{alignmath}{c}
  \text{Decapitated} \implies \text{Dead} \\
  \stackrel{?}{\Uparrow} \\
  \lnot \text{Decapitated} \impliedby \lnot\text{Dead} \\
  \end{alignmath}

  Hm, the question mark doesn't work so well there. Oh well! Anyway, the answer
  is actually yes. We can figure this out by learning a rule about $\lnot$. Namely, that

  \[ \lnot\lnot a = a \]

  In this case, we know

  \[
  \lnot \text{Decapitated} \impliedby \lnot\text{Dead}
  \]

  So, if we just ``not'' both sides, and flip $\implies$ to $\impliedby$,

  \begin{alignedmath}
  \lnot\lnot \text{Decapitated} \implies \lnot\lnot\text{Dead} \\
  \text{Decapitated} \implies \text{Dead}
  \end{alignedmath}

  This is basically just the rule mentioned in \#3. Yay, we learned something!

\end{enumerate}


\s{And and or}

So, sometimes we need to combine two pieces of logic together. There are two
ways we can do this - logical-or and logical-and.

I put logical- in front of them, because the mathematical meaning is slightly
different than the colloquial meaning.

Mathematicians are lazy, so we don't like to write ``logical-and'' whenever we
want to say it, so instead we use the symbol $\land$.

$A \land B$ is true if (and only if) both $A$ and $B$ are true. If one of them
is false, then the entire thing is false.

On the other side, we have logical-or. The symbol for logical-or is $\lor$.
$A \lor B$ is true if either $A$ or $B$ is true, or if both of them are
true. You could think of logical-or as being equivalent to the colloquial
``and/or''.

This monstrosity is called a ``truth table''.

\begin{tabular}{|c|c||c||c|}
  \hline \\
  $\mathbf{A}$ & $\mathbf{B}$ & $\mathbf{A \land B}$ & $\mathbf{A \lor B}$ \\
  \hline \\
  $\true$ & $\true$ & $\true$ & $\true$ \\
  $\true$ & $\false$ & $\false$ & $\true$ \\
  $\false$ & $\true$ & $\false$ & $\true$ \\
  $\false$ & $\false$ & $\false$ & $\false$ \\
  \hline
\end{tabular}

This is pretty simple. If you're having trouble remembering which symbol is
logical-and and which one is logical-or, remember that the logical-and symbol
--- $\land$ --- looks vaguely like an A.

I'm going to introduce some new notation: the $\iff$ symbol.

\[ \parens{A \iff B} = \parens{A \implies B} \land \parens{A \impliedby B} \]

In practice, $\iff$ is logically equivalent to $=$. That is, all of the
properties of $=$ hold.\cite{landau-analysis}

\begin{enumerate}
\item For all $a$, $a = a$.
\item For all $a$ and $b$, $\parens{a = b} \implies \parens{b = a}$.
\item For all $a$ and $b$, and $c$,
  $\parens{\parens{a = b} \land \parens{b = c}} \implies \parens{a = c}$.
\end{enumerate}

You should go over those properties, and verify that they are true for $=$, and
then verify that they are true for $\iff$.

Alright, cool, this was a pretty easy chapter. Only 240 lines of \LaTeX! More
importantly, I'm confident that this stuff is so easy, I won't even give you
exercises!\footnote{The real reason is, I can't come up with any exercises that
  aren't tedious.}

% TODO:
% * Explain more stuff about \lor and \land
% * Explain the first few peano axioms (about equality)
% * Explain the transition of logic.
% * Exercises

% \item $A \notiff B$ means ``Saying $A$ is not the same as saying $B$.'' Remember
%   that $A \iff B$ means $\parens{A \implies B} \land \parens{A \impliedby
%     B}$.
%   Well, $A \notiff B$ means that one of the aforementioned conditions is
%   \falsenm. Remember, when dealing with $\land$, if one of the conditions is
%   \falsenm, the greater condition is \falsenm.

% Note that in this case, $X$ and $Y$ are whole expressions, like $A = B$. They
% are technically Boolean values, but, as we'll see, that intuition tends to fail
% pretty quickly.

% \sss{Equality}

% Before we go much further, I have to make some remarks about equality of
% things. That is, the use of the $=$ sign, and of the $\ne$ sign. Those signs
% should be read as `equals' and `not equals', respectively. These statements are
% true for things that aren't Booleans, such as numbers. However, in this chapter,
% we are only going to be talking about Booleans.

% \begin{itemize}
% \item For every $A$, it is always true that $A = A$.
% \item For every $A$ and $B$, if $A = B$, then it's true that $B = A$. Using the
%   notation above,

%   \[ A = B \implies B = A\]

% \item For every $A$ and $B$, and $C$, if $A = B$ and $B = C$, then it's true
%   that $A = C$. Using the notation above,
  
%   \[\mset{A = B, B = C} \implies A = C\]

%   Because of this, I can write things like $A = B = C$ without
%   ambiguity.\footnote{A common critique of this practice has to do with
%     associativity. That is, many people read $A = B = C$ as
%     $\parens{A = B} = C$. This translates to $A = B \implies C$, which isn't
%     what we want. The solution is to not try to group the operators like that,
%     or use parentheses when you do want to group them.}
% \end{itemize}

% \begin{itemize}
% \item See if you can decipher this: $\forall A \comma \lnot\parens{A \ne A}$.
  
%   You should read that as ``for all $A$, $A \ne A$ is \falsenm.''

% \item $\forall A,B \comma \parens{A = B} \iff \not \parens{A \ne B}$
% \end{itemize}
